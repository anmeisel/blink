{
  "version": 3,
  "sources": ["../../react-resize-observer/src/ResizeObserver.js"],
  "sourcesContent": ["// @flow\n/* eslint-disable complexity */\n\n// =============================================================================\n// Import modules.\n// =============================================================================\nimport React from 'react';\n\nconst style = {\n  position: 'absolute',\n  left: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  overflow: 'hidden',\n  zIndex: -1,\n  visibility: 'hidden',\n  pointerEvents: 'none',\n};\nconst styleChild = {\n  position: 'absolute',\n  left: 0,\n  top: 0,\n  transition: '0s',\n};\n\nfunction isAncestor(node: Node, ancestor: Node) {\n  let current = node.parentNode;\n\n  while (current) {\n    if (current === ancestor) {\n      return true;\n    }\n\n    current = current.parentNode;\n  }\n\n  return false;\n}\n\nexport type Props = {\n  onResize?: (ClientRect) => mixed,\n  onPosition?: (ClientRect) => mixed,\n  onReflow?: (ClientRect) => mixed,\n};\n\nclass ResizeObserver extends React.Component<Props> {\n  static displayName = 'ResizeObserver';\n\n  _expandRef: HTMLElement | null = null;\n  _shrinkRef: HTMLElement | null = null;\n  _node: HTMLElement | null = null;\n  _lastWidth: ?number;\n  _lastHeight: ?number;\n  _lastRect: ClientRect;\n  _hasResize: boolean = false;\n\n  componentDidMount() {\n    this._reflow();\n\n    window.addEventListener('scroll', this._handleScroll, true);\n\n    if (this.props.onPosition || this.props.onReflow) {\n      window.addEventListener('resize', this._reflow, true);\n      this._hasResize = true;\n    }\n  }\n\n  componentDidUpdate() {\n    if ((this.props.onPosition || this.props.onReflow) && !this._hasResize) {\n      window.addEventListener('resize', this._reflow, true);\n      this._hasResize = true;\n    } else if (\n      !(this.props.onPosition || this.props.onReflow) &&\n      this._hasResize\n    ) {\n      window.removeEventListener('resize', this._reflow, true);\n      this._hasResize = false;\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this._handleScroll, true);\n\n    if (this._hasResize) {\n      window.removeEventListener('resize', this._reflow, true);\n    }\n  }\n\n  _handleScroll = (event: Event) => {\n    if (\n      (this.props.onPosition || this.props.onReflow || this.props.onResize) &&\n      (this._globalScollTarget(event.target) ||\n        this._refScrollTarget(event.target) ||\n        this._ancestorScollTarget(event.target))\n    ) {\n      this._reflow();\n    }\n  };\n\n  _globalScollTarget = (target: EventTarget) => {\n    return (\n      target instanceof Node &&\n      (this.props.onPosition || this.props.onReflow) &&\n      (target === document ||\n        target === document.documentElement ||\n        target === document.body)\n    );\n  };\n\n  _refScrollTarget = (target: EventTarget) => {\n    if (\n      target instanceof HTMLElement &&\n      (target === this._expandRef || target === this._shrinkRef)\n    ) {\n      const width = target.offsetWidth;\n      const height = target.offsetHeight;\n\n      if (width !== this._lastWidth || height !== this._lastHeight) {\n        this._lastWidth = width;\n        this._lastHeight = height;\n        this._reset(this._expandRef);\n        this._reset(this._shrinkRef);\n        return true;\n      }\n    }\n    return false;\n  };\n\n  _ancestorScollTarget = (target: EventTarget) => {\n    return (\n      target instanceof Node &&\n      (this.props.onPosition || this.props.onReflow) &&\n      this._node &&\n      isAncestor(this._node, target)\n    );\n  };\n\n  _reflow = () => {\n    if (!this._node || !(this._node.parentNode instanceof Element)) return;\n\n    const rect = this._node.parentNode.getBoundingClientRect();\n\n    let sizeChanged = true;\n    let positionChanged = true;\n\n    if (this._lastRect) {\n      sizeChanged =\n        rect.width !== this._lastRect.width ||\n        rect.height !== this._lastRect.height;\n\n      positionChanged =\n        rect.top !== this._lastRect.top || rect.left !== this._lastRect.left;\n    }\n\n    this._lastRect = rect;\n\n    if (sizeChanged && this.props.onResize) {\n      this.props.onResize(rect);\n    }\n\n    if (positionChanged && this.props.onPosition) {\n      this.props.onPosition(rect);\n    }\n\n    if ((sizeChanged || positionChanged) && this.props.onReflow) {\n      this.props.onReflow(rect);\n    }\n  };\n\n  _reset(node: HTMLElement | null) {\n    if (node) {\n      node.scrollLeft = 100000;\n      node.scrollTop = 100000;\n    }\n  }\n\n  _handleRef = (node: HTMLElement | null) => {\n    this._node = node;\n  };\n\n  _handleExpandRef = (node: HTMLElement | null) => {\n    this._reset(node);\n    this._expandRef = node;\n  };\n\n  _handleShrinkRef = (node: HTMLElement | null) => {\n    this._reset(node);\n    this._shrinkRef = node;\n  };\n\n  render() {\n    if (this.props.onResize || this.props.onReflow) {\n      return (\n        <div style={style} ref={this._handleRef}>\n          <div ref={this._handleExpandRef} style={style}>\n            <div style={{...styleChild, width: 100000, height: 100000}} />\n          </div>\n          <div ref={this._handleShrinkRef} style={style}>\n            <div style={{...styleChild, width: '200%', height: '200%'}} />\n          </div>\n        </div>\n      );\n    }\n\n    return <noscript ref={this._handleRef} />;\n  }\n}\n\nexport default ResizeObserver;\n"],
  "mappings": "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",
  "names": ["style", "position", "left", "top", "right", "bottom", "overflow", "zIndex", "visibility", "pointerEvents", "styleChild", "transition", "isAncestor", "node", "ancestor", "current", "parentNode", "ResizeObserver", "event", "props", "onPosition", "onReflow", "onResize", "_globalScollTarget", "target", "_refScrollTarget", "_ancestorScollTarget", "_reflow", "Node", "document", "documentElement", "body", "HTMLElement", "_expandRef", "_shrinkRef", "width", "offsetWidth", "height", "offsetHeight", "_lastWidth", "_lastHeight", "_reset", "_node", "Element", "rect", "getBoundingClientRect", "sizeChanged", "positionChanged", "_lastRect", "window", "addEventListener", "_handleScroll", "_hasResize", "removeEventListener", "scrollLeft", "scrollTop", "_handleRef", "_handleExpandRef", "_handleShrinkRef", "React", "Component"]
}
